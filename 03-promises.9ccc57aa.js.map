{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAwCA,SAASC,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhDQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,OAAOH,EAAEI,cAAcf,MAAMgB,OACnCC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAEpCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAC5C,CACA0B,SAAU,OACVC,MAAO,QACPC,SAAS,G,IAIdC,OAAM,SAAAR,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAA1B,GAAS2B,OAAOO,QACd,sBAAqCL,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAC3C,CACE0B,SAAU,OACVC,MAAO,QACPC,SAAS,G,IAKjBf,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            fontSize: '16px',\n            width: '350px',\n            useIcon: false,\n          }\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            fontSize: '16px',\n            width: '350px',\n            useIcon: false,\n          }\n        );\n      });\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","fontSize","width","useIcon","catch","failure"],"version":3,"file":"03-promises.9ccc57aa.js.map"}